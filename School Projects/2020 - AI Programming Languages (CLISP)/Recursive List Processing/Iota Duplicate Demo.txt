[1]> ( load "RecursiveListProcessing.lisp" )
;; Loading file RecursiveListProcessing.lisp ...
;; Loaded file RecursiveListProcessing.lisp
T
[2]> ( trace iota duplicate )
;; Tracing function IOTA.
;; Tracing function DUPLICATE.
(IOTA DUPLICATE)
[3]> ( iota 1 )
1. Trace: (IOTA '1)
1. Trace: IOTA ==> (1)
(1)
[4]> ( iota 10 )
1. Trace: (IOTA '10)
2. Trace: (IOTA '9)
3. Trace: (IOTA '8)
4. Trace: (IOTA '7)
5. Trace: (IOTA '6)
6. Trace: (IOTA '5)
7. Trace: (IOTA '4)
8. Trace: (IOTA '3)
9. Trace: (IOTA '2)
10. Trace: (IOTA '1)
10. Trace: IOTA ==> (1)
9. Trace: IOTA ==> (1 2)
8. Trace: IOTA ==> (1 2 3)
7. Trace: IOTA ==> (1 2 3 4)
6. Trace: IOTA ==> (1 2 3 4 5)
5. Trace: IOTA ==> (1 2 3 4 5 6)
4. Trace: IOTA ==> (1 2 3 4 5 6 7)
3. Trace: IOTA ==> (1 2 3 4 5 6 7 8)
2. Trace: IOTA ==> (1 2 3 4 5 6 7 8 9)
1. Trace: IOTA ==> (1 2 3 4 5 6 7 8 9 10)
(1 2 3 4 5 6 7 8 9 10)
[5]> ( duplicate 3 'boing )
1. Trace: (DUPLICATE '3 'BOING)
2. Trace: (DUPLICATE '2 'BOING)
3. Trace: (DUPLICATE '1 'BOING)
3. Trace: DUPLICATE ==> (BOING)
2. Trace: DUPLICATE ==> (BOING BOING)
1. Trace: DUPLICATE ==> (BOING BOING BOING)
(BOING BOING BOING)
[6]> ( duplicate 9 '9 )
1. Trace: (DUPLICATE '9 '9)
2. Trace: (DUPLICATE '8 '9)
3. Trace: (DUPLICATE '7 '9)
4. Trace: (DUPLICATE '6 '9)
5. Trace: (DUPLICATE '5 '9)
6. Trace: (DUPLICATE '4 '9)
7. Trace: (DUPLICATE '3 '9)
8. Trace: (DUPLICATE '2 '9)
9. Trace: (DUPLICATE '1 '9)
9. Trace: DUPLICATE ==> (9)
8. Trace: DUPLICATE ==> (9 9)
7. Trace: DUPLICATE ==> (9 9 9)
6. Trace: DUPLICATE ==> (9 9 9 9)
5. Trace: DUPLICATE ==> (9 9 9 9 9)
4. Trace: DUPLICATE ==> (9 9 9 9 9 9)
3. Trace: DUPLICATE ==> (9 9 9 9 9 9 9)
2. Trace: DUPLICATE ==> (9 9 9 9 9 9 9 9)
1. Trace: DUPLICATE ==> (9 9 9 9 9 9 9 9 9)
(9 9 9 9 9 9 9 9 9)
[7]> ( bye )